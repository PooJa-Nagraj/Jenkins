pipeline{
    agent any
    tools {
        maven 'Maven'
    }
    stages{
        stage('checkout'){
            steps{
                git branch : 'main',
                    url: 'https://github.com/PooJa-Nagraj/Jenkins.git',
                    credentialsId: 'github-cred'
            }
        }
        stage('Build and Test'){
            steps{
                sh 'ls -ltr'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn -DskipTests clean package'
                
            }
        }
//     stage('Static Code Analysis') {
//       steps {
//                withSonarQubeEnv('sonarserver') {
//                    sh """cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.host.url=${env.sonarserver}"""
//                     echo 'SonarQube Analysis Completed'
//                }
//      }
//    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "pooja/demo-arg:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://hub.docker.com/repository/docker/pooja0808/demo', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    }
}
